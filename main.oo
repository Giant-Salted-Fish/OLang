let MetaData = @Require("com.lang.MetaData");
let Frequency = @Require("com.lang.MetaData.Frequency");


struct data .{
    let a = int;
    let b = bool;
    let c = str
}


fn test(a: I32, b) {
    // This is a test function
    let func = (a: I32, b: I32) -> a + b;
    let c = a + 9 * 5;
    let d = 4 * (b - 2);
    @MetaData(Frequency.High)
    for (1,2,3) x {
        d = d * 5;
    }
    @MetaData(Frequency.Median)
    else if (c != 0 && d != 0) {
        let e = d + c;
        c = d * d;
    }
    else {
        for_each(lst) fn x {
            x + 1
        };
    }
    let s1 = .();
    let s2 = .(a=3);
    let s3 = .(a=3, b=5);
    let s4 = .(let a = 3);
    let s5 = .(let a = 3; let b = 5);
    return (if (c != 0) { c } else { func(c, d) })
}
